# Dockerfile for Production Environment

# Use Python slim image for production
FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=windforlife.settings.prod
ENV POETRY_HOME="/opt/poetry"
ENV PATH="${POETRY_HOME}/bin:$PATH"
# Disable Poetry virtualenvs
ENV POETRY_VIRTUALENVS_CREATE=false

# Set working directory
WORKDIR /app

# # Install dependencies
# COPY requirements.txt /app
# COPY requirements.prod.txt /app
# RUN pip install --upgrade pip && \
#     pip install -r requirements.prod.txt

# Install system dependencies
RUN apt-get update && apt-get install -y curl build-essential libpq-dev

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - && \
    ln -s $HOME/.local/bin/poetry /usr/local/bin/poetry && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy only the dependency files first for caching
COPY pyproject.toml /app
COPY poetry.lock /app

# Install dependencies
RUN poetry install --no-interaction --no-root

# Copy application source code
COPY . /app

# Collect static files
RUN poetry run python manage.py collectstatic --noinput

# Expose port for production
EXPOSE 8000

# Run gunicorn server for production
# CMD ["gunicorn", "windforlife.wsgi.prod:application", "--bind", "0.0.0.0:8000", "--workers=4"]
CMD ["poetry", "run", "gunicorn", "windforlife.wsgi.prod:application", "--bind", "0.0.0.0:8000", "--workers=4"]
